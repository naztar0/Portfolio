{
  "title": "Projects",
  "buttons": {
    "demo": "Try it yourself",
    "source": "GitHub",
    "promo": "Promo",
    "stack": "Stack"
  },
  "tags": {
    "browser-extension": "Browser Extension",
    "telegram-bot": "Telegram Bot",
    "web-app": "Web App",
    "android-app": "Android App",
    "desktop-app": "Desktop App",
    "console-app": "Console App",
    "library": "Library"
  },
  "projects": [
    {
      "name": "Tabber",
      "title": "Tabber",
      "logo": "/projects/logo/tabber.svg",
      "demo": "https://tabber.top/",
      "source": "https://github.com/naztar0/tabber-locales",
      "promo": ["/projects/promo/1.jpg", "/projects/promo/2.jpg", "/projects/promo/3.jpg", "/projects/promo/4.jpg"],
      "tag": "browser-extension",
      "stack": ["TypeScript", "Solid.js", "IndexedDB", "Next.js", "Prisma", "PostgreSQL"],
      "description": "A cross-browser extension that revolutionizes online browsing by providing a virtual browser-like interface, enabling effortless organization of tabs into customizable groups, easy tab previews, efficient tab searching and sorting, collaboration through tab sharing, seamless data sync across devices, and a variety of customization settings.",
      "fontSizePx": 20
    },
    {
      "name": "NeoCab Bot",
      "title": "NeoCab",
      "logo": "/projects/logo/neocab-bot.jpg",
      "demo": "https://t.me/NeocabDemoBot",
      "source": "https://github.com/naztar0/StudCabinet",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "MySQL", "Pillow"],
      "description": "Personal electronic account of a student of NTU KhPI in Telegram. It provides general student information, record book data, student ratings for scholarship eligibility, academic debt status, schedules, semester-wise curriculum, tuition fee details for contractors, downloads for semester information, grade notifications, contractor ranking, next semester scholarship probability, bar charts for record book and curriculum, student search, department news display, and language change support.",
      "fontSizePx": 17
    },
    {
      "name": "NeoCab Web",
      "title": "NeoCab",
      "logo": "/projects/logo/neocab-web.svg",
      "demo": "https://neocab.demo.neulen.dev/",
      "source": "",
      "promo": "https://youtu.be/g1OBl18q380",
      "tag": "web-app",
      "stack": ["TypeScript", "React", "PHP", "Laravel", "MySQL", "Redis", "Microsoft Graph API", "Azure API"],
      "description": "The next stage of NeoCab Bot development, a full-fledged web app. It's is a student-oriented e-cabinet platform for NTU KhPI, offering a variety of features including attendance tracking, record books, ratings, schedules, syllabuses, student search, and integration with Microsoft Office 365, prioritizing user experience, privacy, and continuous improvement.",
      "fontSizePx": 20
    },
    {
      "name": "Ucode Mobile",
      "title": "Ucode Mobile",
      "logo": "/projects/logo/ucode-app.png",
      "demo": "",
      "source": "https://github.com/naztar0/UcodeAndroidApp",
      "promo": "",
      "tag": "android-app",
      "stack": ["Java", "Android SDK"],
      "description": "A native android app for Ucode IT Academy. Written from scratch in Android Studio. Allows to view your and other students' profile, skills, projects, assessments, history, media files, cluster map and many other things. Nearly a local social media for the Ucode students!",
      "fontSizePx": 21
    },
    {
      "name": "Audio Splitter",
      "title": "Audio Splitter",
      "logo": "/projects/logo/audio-splitter-bot.png",
      "demo": "https://t.me/AudioSplitterRobot",
      "source": "https://github.com/naztar0/AudioSplitterBot",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "PostgreSQL", "FFmpeg"],
      "description": "A bot for separating songs into components such as vocals, instrumental, guitar, or bass. Built using the lalal.ai public API.",
      "fontSizePx": 32
    },
    {
      "name": "Crypto Bot",
      "title": "Crypto Bot",
      "logo": "/projects/logo/crypto-bot.jpg",
      "demo": "https://t.me/CryptoBotDemo_bot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "Binance API", "MOEX API"],
      "description": "A manual exchanger for buying/selling cryptocurrency for fiat. The functionality includes displaying exchange rates, partnership programs, and feedback features.",
      "fontSizePx": 27
    },
    {
      "name": "Dice Bot",
      "title": "Dice Bot",
      "logo": "/projects/logo/dice-bot.jpg",
      "demo": "https://t.me/DiceDemoBot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "d7networks API"],
      "description": "A bot that sends SMS to the user's phone number, then prompts them to subscribe to sponsored Telegram channels, verifies the subscription. After that, the user can play a Dice Roll game using an embedded Telegram random number generator, increasing their cryptocurrency or NFT balance. If they win, the current bet is doubled, and if they lose, it resets to zero. The balance can be replenished by inviting other users, earning cryptocurrency coins and NFTs in the process.",
      "fontSizePx": 18
    },
    {
      "name": "Exchange Bot",
      "title": "Exchange Bot",
      "logo": "/projects/logo/exchange-bot.jpg",
      "demo": "https://t.me/ExchangeBotDemo_bot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "CryptoCompare API", "CoinPayments API", "QIWI API"],
      "description": "An automated cryptocurrency exchange bot with the following features: technical support, display of service reviews, exchange history, and a commission discount based on user-specific criteria achievements.",
      "fontSizePx": 27
    },
    {
      "name": "FAQ Bot",
      "title": "FAQ Bot",
      "logo": "/projects/logo/faq-bot.jpg",
      "demo": "https://t.me/FaqDemoBot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL"],
      "description": "A bot where users can receive responses (pre-prepared messages) to their questions. Users can manually choose a category to find the relevant question or input a phrase, based on which the bot will search for matching questions.",
      "fontSizePx": 25
    },
    {
      "name": "Guides Bot",
      "title": "Guides Bot",
      "logo": "/projects/logo/guides-bot.jpg",
      "demo": "https://t.me/GuidesDemoBot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "Aiogram", "PostgreSQL"],
      "description": "A bot that allows users to submit apps and receive information via email after a certain period, granting access to audio tours. Additionally, users can become online tour guides by sharing interesting facts about different cities or locations in the form of text, photos/videos, or voice messages through the bot.",
      "fontSizePx": 21
    },
    {
      "name": "Links Bot",
      "title": "Links Bot",
      "logo": "/projects/logo/links-bot.jpg",
      "demo": "https://t.me/LinksDemoBot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL"],
      "description": "A bot designed to generate personal download links for a product. To access the product, users are required to subscribe to sponsored Telegram channels. Once the user subscribes, the bot automatically verifies this condition and provides the download link.",
      "fontSizePx": 22
    },
    {
      "name": "Lottery Bot",
      "title": "Lottery Bot",
      "logo": "/projects/logo/lottery-bot.png",
      "demo": "https://t.me/LotteryDemoBot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "CoinPayments API"],
      "description": "A bot where users can top up their balance with cryptocurrency, purchase lottery tickets for various draws, and at the end of each draw, the bot sends the list of participants to the admin. The admin then randomly selects a winner and contacts them.",
      "fontSizePx": 23
    },
    {
      "name": "Market Bot",
      "title": "Market Bot",
      "logo": "/projects/logo/market-bot.png",
      "demo": "https://t.me/MarketBotDemo_bot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "pyOTP", "bit (Bitcoin Core RPC)", "pycoin (AltCoins Core RPC)"],
      "description": "A comprehensive P2P trading bot with features such as multi-account authorization using login, password, and PIN code. It boasts enhanced security with server-side encryption for the majority of data. Users can customize preferences related to location, language, and more for a personalized experience.",
      "fontSizePx": 21
    },
    {
      "name": "Subs Bot",
      "title": "Subscriptions Bot",
      "logo": "/projects/logo/subs-bot.png",
      "demo": "https://t.me/SubsDemoBot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL"],
      "description": "A bot where users can subscribe and pay a monthly fee to receive scheduled premium content through paid Telegram invoices. The bot allows users to manage their subscriptions, and it sends reminders in advance for payment renewals.",
      "fontSizePx": 24
    },
    {
      "name": "Money Bot",
      "title": "Money Bot",
      "logo": "/projects/logo/money-bot.jpg",
      "demo": "https://t.me/MoneyDemo_Bot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "CryptoCompare API"],
      "description": "A bot where users can subscribe and pay a monthly fee to receive scheduled premium content through paid Telegram invoices. The bot allows users to manage their subscriptions, and it sends reminders in advance for payment renewals.",
      "fontSizePx": 24
    },
    {
      "name": "Paint Bot",
      "title": "Paint Bot",
      "logo": "/projects/logo/paint-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "Animegan2 PyTorch href=https://github.com/bryandlee/animegan2-pytorch", "Fast Style Transfer in TensorFlow href=https://github.com/lengstrom/fast-style-transfer", "PyTorch-Style-Transfer href=https://github.com/zhanghang1989/PyTorch-Multi-Style-Transfer"],
      "description": "A bot where users upload their photos and receive them back transformed in the style of Anime, Van Gogh, Claude Monet, Gaudi's mosaic, or a custom style.",
      "fontSizePx": 26
    },
    {
      "name": "NFT Bot",
      "title": "NFT Bot",
      "logo": "/projects/logo/nft-bot.png",
      "demo": "https://t.me/NftDemoBot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "Mnemonic"],
      "description": "A bot for collective NFT purchases and other investments. It includes registration and authorization, profile viewing, balance checking, customer support access, and a referral program.",
      "fontSizePx": 28
    },
    {
      "name": "Offer Bot",
      "title": "Offer Bot",
      "logo": "/projects/logo/offer-bot.jpg",
      "demo": "https://t.me/OfferDemo_Bot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL"],
      "description": "A bot for purchasing casino/betting offers. The admin can add special offers (deals), which are then displayed to users based on their region. Users have the option to contact a manager for further assistance.",
      "fontSizePx": 27
    },
    {
      "name": "Shop Bot",
      "title": "Shop Bot",
      "logo": "/projects/logo/shop-bot.png",
      "demo": "https://t.me/ShopBotDemoo_bot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "NowPayments API"],
      "description": "A bot for creating orders with a personal account and the option to choose a specific store from a list. After placing an order, an invoice is sent to the user for payment, including the service fee. All order details are available in the admin panel, where the status of the order and other information can be modified.",
      "fontSizePx": 21
    },
    {
      "name": "Suggest Bot",
      "title": "Suggest Bot",
      "logo": "/projects/logo/suggest-bot.jpg",
      "demo": "https://t.me/SuggestDemoBot",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL"],
      "description": "A bot designed to accept post proposals from channel subscribers and send these proposals to the channel admins' chat. The bot accepts posts of all types, including albums containing videos and files.",
      "fontSizePx": 28
    },
    {
      "name": "Swapper Bot",
      "title": "Swapper Bot",
      "logo": "/projects/logo/swapper-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "bit (Bitcoin Core RPC)", "TRONpy (TRON/USDT Core RPC)", "CryptoCompare API"],
      "description": "A free P2P crypto exchange bot on Telegram where users can buy and sell BTC, XMR, USDT, LTC, and TON. Users can check their balance, create vouchers for transferring funds within the bot, deposit and withdraw cryptocurrencies. The bot also includes a referral program.",
      "fontSizePx": 21
    },
    {
      "name": "Avatar Changer",
      "title": "Tg Avatar Changer",
      "logo": "/projects/logo/avatar-changer.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "console-app",
      "stack": ["Python", "Telethon", "Pillow"],
      "description": "A script based on the Telegram Core API for periodically changing a user's avatar. It has several operating modes: selecting one of 500 default Reddit avatars, constructing a unique character from elements similar to Reddit, obtaining a random avatar from a random avatar generator, or from a random image from a Telegram channel.",
      "fontSizePx": 21
    },
    {
      "name": "ChatGPT Bot",
      "title": "ChatGPT Bot",
      "logo": "/projects/logo/chatgpt-bot.jpg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "OpenAI API"],
      "description": "A bot based on the ChatGPT-4 API. It allows you to choose a language, create new chats, and manage existing ones.",
      "fontSizePx": 32
    },
    {
      "name": "Chronos",
      "title": "Chronos",
      "logo": "/projects/logo/chronos.svg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "web-app",
      "stack": ["JavaScript", "React", "PHP", "Laravel", "MySQL"],
      "description": "A web app similar to Google Calendar. It provides the ability to switch calendar modes, create custom reminders or events, customize their appearance and timing, and add other users for collaboration.",
      "fontSizePx": 26
    },
    {
      "name": "Coding Challenge",
      "title": "Coding Challenge",
      "logo": "/projects/logo/coding-challenge-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI"],
      "description": "A bot for creating corporate coding challenges. The admin creates a challenge, sets the publication and end date; at the specified time, the bot sends it to all users. Users solve the task and submit their answers. If correct, the bot requests a link to the repository with the solution and records the response. After the challenge ends, a leaderboard is generated to showcase participants' performance.",
      "fontSizePx": 19
    },
    {
      "name": "Video Compress",
      "title": "Video Compressor",
      "logo": "/projects/logo/video-compressor-bot.jpg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "FFmpeg"],
      "description": "A bot for extremely compressing videos, enabling users to preview the approximate content even with poor internet connectivity. Created in late February 2022 for personal use and for friends, as internet conditions were suboptimal during the initial days of the war, and it was crucial to stay updated on the news.",
      "fontSizePx": 22
    },
    {
      "name": "Corona Bot",
      "title": "Corona Bot",
      "logo": "/projects/logo/corona-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "MySQL", "BeautifulSoup"],
      "description": "A bot for regularly updating Telegram groups on the COVID-19 situation in their region, providing detailed information about recoveries, new cases, and fatalities. It also included comforting facts and amusing quotes. The bot is no longer operational, and I hope that it won't be needed anymore.",
      "fontSizePx": 22
    },
    {
      "name": "Dikidi Bot",
      "title": "Dikidi Bot",
      "logo": "/projects/logo/dikidi-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "MySQL"],
      "description": "A bot for scheduling beauty services with professionals through the dikidi.net API. Users can select the type of service, choose a master from the list, and pick a time slot for the appointment. The bot then monitors the selected time frame and notifies the user if a suitable slot becomes available, prompting them to schedule the appointment on the website. Users can manage their monitoring list through the bot.",
      "fontSizePx": 19
    },
    {
      "name": "ULF",
      "title": "Ucode LMS Features",
      "logo": "/projects/logo/ulf.jpg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "browser-extension",
      "stack": ["JavaScript"],
      "description": "An extension for the browser designed to enhance functionalities within the Ucode IT Academy. It utilizes vulnerabilities in the personal account page's code and access to the unpublished API to acquire additional points. Additionally, it significantly improves the website's UI and UX, introducing the ability to create custom statuses. However, it has been disabled due to ethical considerations and at the request of the academy's management.",
      "fontSizePx": 19
    },
    {
      "name": "Word Cards",
      "title": "Word Cards",
      "logo": "/projects/logo/word-cards-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "Telegraph API", "TTS"],
      "description": "A bot for language learning based on a modified Anki methodology. It allows users to create a deck of words and learn them by sending translations to the bot. Users can also listen to pronunciation, export the deck to telegra.ph, as well as in a format suitable for the desktop Anki app.",
      "fontSizePx": 22
    },
    {
      "name": "Lottie-Solid",
      "title": "Lottie-Solid",
      "logo": "/projects/logo/lottie-solid.png",
      "demo": "",
      "source": "https://github.com/naztar0/lottie-solid",
      "promo": "",
      "tag": "library",
      "stack": ["TypeScript", "Solid.js", "lottie-web", "tsup"],
      "description": "A Solid.js component for the Lottie Web Player. Based on the Lottie Player Web Component. It's used on this site!",
      "fontSizePx": 32
    },
    {
      "name": "E-Shop Bot",
      "title": "E-Commerce Bot",
      "logo": "/projects/logo/e-shop-bot.jpg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "WayForPay API", "Portmone API"],
      "description": "A bot functioning as an online store for selling products. It features convenient navigation through the entire product range, collects shipping information, and enables instant payment for purchases.",
      "fontSizePx": 26
    },
    {
      "name": "Motivation Bot",
      "title": "Motivation Bot",
      "logo": "/projects/logo/motivation-bot.jpg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "MySQL"],
      "description": "A motivational and habit-coaching bot. It sends reminders for healthy habits, and the list of habits is customized based on the user's chosen profile. Users can flexibly configure reminders to suit their preferences and disable unnecessary ones.",
      "fontSizePx": 23
    },
    {
      "name": "Moving Motivators",
      "title": "Moving Motivators",
      "logo": "/projects/logo/moving-motivators.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "web-app",
      "stack": ["TypeScript", "React", "RTK", "Vite", "PHP", "Laravel", "MySQL"],
      "description": "A web app for playing Moving Motivators, an exercise meant to help us reflect on motivation and how it affects organizational change. Moving Motivators is a swell game for pairing your team up one-on-one or for you as manager to play directly with your individual teammates.",
      "fontSizePx": 22
    },
    {
      "name": "Notification Bot",
      "title": "Notification Bot",
      "logo": "/projects/logo/notification-bot.jpg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "MySQL"],
      "description": "A bot for creating reminders at specific times. Reminders can be sent once or on a regular basis at a designated time. Additionally, users can modify or delete reminders as needed.",
      "fontSizePx": 29
    },
    {
      "name": "Osint VK",
      "title": "Osint VKontakte",
      "logo": "/projects/logo/osint-vk.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "console-app",
      "stack": ["Python", "VK API", "BeautifulSoup", "openpyxl"],
      "description": "A script for parsing user profiles from a database in VKontakte and performing subsequent analysis. It checks profiles for posts and reposts containing specific content based on keywords. The script also parses sites with databases of Russian court cases and searches for specified people in them. Initially intended for identifying individuals who may pose a threat to national security.",
      "fontSizePx": 18
    },
    {
      "name": "Patreon Themes",
      "title": "Patreon Themes",
      "logo": "/projects/logo/patreon-themes.svg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "browser-extension",
      "stack": ["TypeScript", "Vite"],
      "description": "A browser extension for changing the light themes on the Patreon website. It was originally created before the introduction of a native dark theme and served as the only method to enable it. Even after the website update, the extension continues to fulfill its tasks, offering six additional themes for users to choose from.",
      "fontSizePx": 22
    },
    {
      "name": "Teleprom",
      "title": "Teleprom",
      "logo": "/projects/logo/teleprom.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "MonoBank API"],
      "description": "An app for managing a multitude of bots for posting advertisements in Telegram channels. The admin panel allows configuration of bots, the channels to which they are linked, product categories, and their prices. Users can also view various data and statistics. The bots automatically accept payments through online banking and can artificially boost views on new posts through an external service.",
      "fontSizePx": 19
    },
    {
      "name": "Pumps Bot",
      "title": "Binance Pumps",
      "logo": "/projects/logo/binance-pumps-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Telethon", "Aiogram", "MySQL", "Binance API"],
      "description": "A bot for participating automatically in cryptocurrency pumps on Binance. Users send their API tokens, and the bot queues them for purchase. The bot meticulously monitors posts in Telegram channels for pump announcements. Once a signal is given, the bot simultaneously purchases the required coin for all users, taking into account additional settings. After a specified period of time, the bot automatically sells the coin and records the profit.",
      "fontSizePx": 19
    },
    {
      "name": "QSalon Bot",
      "title": "QSalon",
      "logo": "/projects/logo/qsalon-bot.jpg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "OpenCage API", "WayForPay API"],
      "description": "A virtual beauty salon bot where users can choose between being a client or a beauty professional (master). Masters select categories for which they wish to receive notifications about orders and provide their location. Clients order beauty services by selecting a category, time, price range, and location. The bot then sends notifications to the nearest masters. The search radius for masters can vary depending on the city.",
      "fontSizePx": 19
    },
    {
      "name": "Records Bot",
      "title": "Records Bot",
      "logo": "/projects/logo/records-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Django", "PyTelegramBotAPI", "PostgreSQL", "Pandas"],
      "description": "A bot that allows users to create lists of entries and keep track of them. Each entry has a timestamp indicating when it was created. Users can edit and delete individual entries as well as entire lists.",
      "fontSizePx": 29
    },
    {
      "name": "Reddit Parser",
      "title": "Reddit Video Parser",
      "logo": "/projects/logo/reddit-parser-bot.jpg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "asyncPRAW", "FFmpeg", "youtube-dl"],
      "description": "A bot for automatic parsing of new videos from specified subreddits, converting them to a suitable format/codec, and sending them to a Telegram chat. Used for copying content from Reddit to Telegram channels.",
      "fontSizePx": 26
    },
    {
      "name": "Stickers Search",
      "title": "Stickers Search",
      "logo": "/projects/logo/stickers-search-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "MySQL"],
      "description": "A bot for searching stickers among specified packs using keywords or emojis. The search operates in inline mode. In the bot, you can configure which keywords or emojis correspond to specific stickers in its packs.",
      "fontSizePx": 27
    },
    {
      "name": "Dicent",
      "title": "Dicent",
      "logo": "/projects/logo/dicent.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "web-app",
      "stack": ["JavaScript", "React", "PHP", "Laravel", "MySQL", "Redis", "AWS S3", "AWS Transcribe"],
      "description": "A web app for converting speech into text, the feature of which is the automatic separation of speech by speakers. Each speaker can be assigned his own name. Created transcripts can be saved as projects in your account.",
      "fontSizePx": 25
    },
    {
      "name": "Tg Themes",
      "title": "Tg Web Themes",
      "logo": "/projects/logo/telegram-web-themes.svg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "browser-extension",
      "stack": ["JavaScript"],
      "description": "A browser extension for changing color themes on the Telegram WebA. It alters the main color of the app since initially only one theme color, purple, is provided. It includes a dynamic color change mode aka Rainbow Mode.",
      "fontSizePx": 25
    },
    {
      "name": "Tg Guardian",
      "title": "Tg Posts Guardian",
      "logo": "/projects/logo/tg-posts-guardian.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "console-app",
      "stack": ["Python", "Django", "Pyrogram", "Telethon", "MySQL"],
      "description": "An app designed to protect Telegram channels from malicious attempts to inflate post views. It operates based on user bots running in asynchronous mode, constantly monitoring activity on channels. Upon detecting fraudulent view manipulations, the bots promptly remove such posts. In cases of minor manipulations across the entire channel, the bots can change the channel's username to invalidate the old link. The app offers a variety of operational modes.",
      "fontSizePx": 18
    },
    {
      "name": "Tutors Bot",
      "title": "Tutors Bot",
      "logo": "/projects/",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram", "MySQL"],
      "description": "A bot for facilitating transactions in the education sector between a client and a service provider. The client posts tasks with all the necessary information and the proposed price in a Telegram channel. Service providers choose the tasks they want to complete. The bot acts as an intermediary, ensuring the integrity of the transaction.",
      "fontSizePx": 21
    },
    {
      "name": "PokéChat",
      "title": "PokéChat",
      "logo": "/projects/logo/pokechat.png",
      "demo": "",
      "source": "https://github.com/PAXANDDOS/PokeChat",
      "promo": "https://youtu.be/2WWectGM238",
      "tag": "desktop-app",
      "stack": ["C", "cJSON", "SQLite3", "OpenSSL", "GTK+3", "Cairo", "SDL2", "pthread"],
      "description": "A collaborative educational project, consisting of a desktop messenger app themed around Pokémon. My contribution to the project includes developing the server-side component from scratch, as well as providing some assistance with the front-end side. An outstanding feature is the codebase, which is entirely written in C.",
      "fontSizePx": 21
    },
    {
      "name": "4Sudo",
      "title": "4Sudo",
      "logo": "/projects/logo/4sudo.svg",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "web-app",
      "stack": ["JavaScript", "React", "PHP", "Laravel", "MySQL"],
      "description": "It's a StackOverflow-like Q&A website that functions as a platform for users to pose technical questions related to programming and other computer-related topics. It features a convenient search function categorized by topics, posts, and users, along with personalized questions recommendations.",
      "fontSizePx": 22
    },
    {
      "name": "Username Bot",
      "title": "Username Bot",
      "logo": "/projects/logo/username-bot.png",
      "demo": "",
      "source": "",
      "promo": "",
      "tag": "telegram-bot",
      "stack": ["Python", "Aiogram"],
      "description": "A bot for automatically generating available usernames on Telegram based on a given template. It can replace numbers with words and add various symbols according to the specified pattern.",
      "fontSizePx": 28
    },
    {
      "name": "Fuzzle",
      "title": "Fuzzle",
      "logo": "/projects/logo/fuzzle.svg",
      "demo": "",
      "source": "https://github.com/fuzzleu",
      "promo": "https://youtu.be/wm6ncqViCRg",
      "tag": "web-app",
      "stack": ["JavaScript", "React", "PHP", "Laravel", "MySQL"],
      "description": "A collaborative educational project, an online service for graphic design for creating your own masterpieces. It features a variety of design templates for customization and also includes the ability to create accounts and save individual projects. My contribution to the project involved writing the backend portion.",
      "fontSizePx": 22
    },
    {
      "name": "Matrix Run",
      "title": "Matrix Run",
      "logo": "/projects/logo/matrix-run.png",
      "demo": "",
      "source": "https://github.com/PAXANDDOS/Matrix-Run",
      "promo": "",
      "tag": "desktop-app",
      "stack": ["C", "SDL2"],
      "description": "A collaborative educational project, a game in which Neo runs away from matrix blocks, thereby saving himself from being absorbed into the matrix, while he needs to pick up red pills to reduce the blocks, and avoid blue ones. Entirely written in C in only 4 days!",
      "fontSizePx": 22
    },
    {
      "name": "Uls",
      "title": "Uls",
      "logo": "/projects/logo/uls.png",
      "demo": "",
      "source": "https://github.com/naztar0/Ucode-uls",
      "promo": "",
      "tag": "console-app",
      "stack": ["C", "dirent.h"],
      "description": "An educational project, a simplified version of the Unix ls command. It lists information about files and directories in the current directory. It's written in C and uses the dirent.h library.",
      "fontSizePx": 29
    },
    {
      "name": "Ush",
      "title": "Ush",
      "logo": "/projects/logo/ush.png",
      "demo": "",
      "source": "https://github.com/naztar0/Ucode-ush",
      "promo": "",
      "tag": "console-app",
      "stack": ["C"],
      "description": "An educational project, a simplified version of the Unix shell. It's written in C from scratch and includes a variety of built-in commands, such as echo, cd, pwd, export, unset, env, exit, and more.",
      "fontSizePx": 29
    }
  ]
}
